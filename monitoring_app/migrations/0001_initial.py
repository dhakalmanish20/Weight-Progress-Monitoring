# Generated by Django 5.1.4 on 2025-02-19 08:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the food item', max_length=100, unique=True)),
                ('calories', models.IntegerField(help_text='Calories per 100g', validators=[django.core.validators.MinValueValidator(0)])),
                ('protein', models.FloatField(help_text='Protein in grams per 100g', validators=[django.core.validators.MinValueValidator(0)])),
                ('fat', models.FloatField(help_text='Fat in grams per 100g', validators=[django.core.validators.MinValueValidator(0)])),
                ('carbs', models.FloatField(help_text='Carbohydrates in grams per 100g', validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the meal plan', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Message content')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PredictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_weight', models.FloatField(blank=True, help_text='Predicted weight in kilograms', null=True)),
                ('prediction_date', models.DateField(auto_now_add=True, help_text='Date of prediction')),
                ('confidence', models.FloatField(blank=True, help_text='Confidence score (0 to 1)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-prediction_date'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(blank=True, help_text='Height in centimeters', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('target_weight', models.FloatField(blank=True, help_text='Target weight in kilograms', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('profile_picture', models.ImageField(blank=True, help_text='Upload a profile picture', null=True, upload_to='profiles/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeightLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, help_text='Date of the log')),
                ('weight', models.FloatField(help_text='Weight in kilograms', validators=[django.core.validators.MinValueValidator(0)])),
                ('calories_consumed', models.IntegerField(default=0, help_text='Total calories consumed', validators=[django.core.validators.MinValueValidator(0)])),
                ('workout_intensity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='low', help_text='Workout intensity level', max_length=50)),
                ('steps', models.IntegerField(default=0, help_text='Number of steps taken', validators=[django.core.validators.MinValueValidator(0)])),
                ('sleep_hours', models.FloatField(help_text='Hours of sleep', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('heart_rate', models.IntegerField(blank=True, help_text='Heart rate in beats per minute', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('blood_pressure', models.CharField(blank=True, help_text="Blood pressure in format '120/80'", max_length=10, null=True)),
                ('mood', models.CharField(choices=[('happy', 'Happy'), ('neutral', 'Neutral'), ('sad', 'Sad')], default='neutral', help_text="User's mood", max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='FoodConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity consumed in grams', validators=[django.core.validators.MinValueValidator(0)])),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring_app.fooditem')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foodconsumption_set', to='monitoring_app.weightlog')),
            ],
        ),
    ]
